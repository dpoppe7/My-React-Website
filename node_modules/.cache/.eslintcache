[{"/Users/damaris/react-website/src/index.js":"1","/Users/damaris/react-website/src/App.js":"2","/Users/damaris/react-website/src/components/Navbar.js":"3","/Users/damaris/react-website/src/components/Button.js":"4"},{"size":157,"mtime":1628559876998,"results":"5","hashOfConfig":"6"},{"size":383,"mtime":1628673008567,"results":"7","hashOfConfig":"6"},{"size":2240,"mtime":1628660566973,"results":"8","hashOfConfig":"6"},{"size":849,"mtime":1628652700425,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"11cehwu",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"12"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"/Users/damaris/react-website/src/index.js",[],["21","22"],"/Users/damaris/react-website/src/App.js",["23"],"import React from 'react';\nimport Navbar from './components/Navbar';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  const isBackgroundWhite = true;\n\n  return (\n    <>\n    <Router> \n      <Navbar/>\n        <Switch>\n          <Route path='/' exact/>\n        </Switch>\n    </Router> \n    </>\n  );\n}\n\nexport default App;\n","/Users/damaris/react-website/src/components/Navbar.js",["24"],"import { logDOM } from '@testing-library/dom';\nimport React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport './Navbar.css';\nimport {Button} from './Button'\n\n\nfunction Navbar() {\n    const [click, setClick] = useState(false);\n    const [button, setButton] = useState(true);\n\n    const handleClick = () => setClick(!click);\n    const closeMobileMenu = () => setClick(false);\n\n    const showButton = () => {\n        if (window.innerWidth <= 960) {\n        setButton(false);\n        } else {\n        setButton(true);\n        }\n    };\n\n    window.addEventListener('resize', showButton);\n\n    return(\n    <nav className=\"navbar\">\n        <div className=\"navbar-container\">\n            <Link to='/'>\n                <img src=\"icons/logo.png\" alt=\"Logo\" className=\"navbar-logo\"/>\n            </Link>\n            <div className=\"menu-icon\" onClick={handleClick}>\n                <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n            </div>\n\n            <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n                <li className='nav-item'>\n                    <Link to='/' className='nav-links' onClick={closeMobileMenu}>\n                        HOME\n                    </Link>\n                </li>\n                <li className='nav-item'>\n                    <Link to='/about' className='nav-links' onClick={closeMobileMenu}>\n                        ABOUT\n                    </Link>\n                </li>\n                <li className='nav-item'>\n                    <Link to='/projects' className='nav-links' onClick={closeMobileMenu}>\n                        PROJECTS\n                    </Link>\n                </li>\n                <li className='nav-item'>\n                    <Link to='/contact' className='nav-links' onClick={closeMobileMenu}>\n                        CONTACT\n                    </Link>\n                </li>\n                <li>\n                    <Link to='/Resume' className='nav-links-mobile' onClick={closeMobileMenu}>\n                        RESUME\n                    </Link>\n                </li>\n\n            </ul>\n            {button && <Button buttonStyle='btn--outline'>RESUME</Button>}\n        </div>\n        \n    </nav>\n    \n    )\n}\n\nexport default Navbar","/Users/damaris/react-website/src/components/Button.js",[],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":7,"column":9,"nodeType":"31","messageId":"32","endLine":7,"endColumn":26},{"ruleId":"29","severity":1,"message":"33","line":1,"column":10,"nodeType":"31","messageId":"32","endLine":1,"endColumn":16},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"no-unused-vars","'isBackgroundWhite' is assigned a value but never used.","Identifier","unusedVar","'logDOM' is defined but never used.","no-global-assign","no-unsafe-negation"]